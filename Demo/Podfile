platform :ios, '14.0'
source 'https://github.com/CocoaPods/Specs.git'

target 'Demo' do
  use_frameworks!
    pod 'ParticleWalletGUI', '1.3.8'
    pod 'ParticleWalletAPI', '1.3.8'
    pod 'ParticleNetworkBase', '1.3.8'
    pod 'ParticleAuthService', '1.3.8'
    pod 'ParticleWalletConnect', '1.3.8'
    pod 'ParticleAA', '1.3.8'
    
    pod 'ParticleConnect', '0.2.15'
    pod 'ParticleAuthAdapter', '0.2.15'
    pod 'ConnectWalletConnectAdapter', '0.2.15'
    pod 'ConnectEVMAdapter', '0.2.15'
    pod 'ConnectSolanaAdapter', '0.2.15'
    pod 'ConnectPhantomAdapter', '0.2.15'
    pod 'ConnectCommon', '0.2.15'
    
    # if you use ParticleWalletGUI, you need add this line.
    pod 'SkeletonView', :git => 'https://github.com/SunZhiC/SkeletonView.git', :branch => 'main'
end


post_install do |installer|
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
    config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
      end
    end
  
  
  # This is necessary for Xcode 14, because it signs resource bundles by default
      # when building for devices.
      installer.target_installation_results.pod_target_installation_results
        .each do |pod_name, target_installation_result|
        target_installation_result.resource_bundle_targets.each do |resource_bundle_target|
          resource_bundle_target.build_configurations.each do |config|
            config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
          end
        end
      end
        
        
      installer.generated_projects.each do |project|
            project.targets.each do |target|
                target.build_configurations.each do |config|
                    config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '14.0'
                 end
            end
     end
      
      installer.pods_project.targets.each do |target|
              target.build_configurations.each do |config|
              xcconfig_path = config.base_configuration_reference.real_path
              xcconfig = File.read(xcconfig_path)
              xcconfig_mod = xcconfig.gsub(/DT_TOOLCHAIN_DIR/, "TOOLCHAIN_DIR")
              File.open(xcconfig_path, "w") { |file| file << xcconfig_mod }
              end
          end
        
end
