// Generated by Apple Swift version 5.6 (swiftlang-5.6.0.323.62 clang-1316.0.20.8)
#ifndef PARTICLENETWORKBASE_SWIFT_H
#define PARTICLENETWORKBASE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="ParticleNetworkBase",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSString;

SWIFT_CLASS("_TtC19ParticleNetworkBase10AccessList")
@interface AccessList : NSObject
- (nonnull instancetype)initWithAddress:(NSString * _Nonnull)address storageKeys:(NSArray<NSString *> * _Nonnull)storageKeys OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum Action : NSInteger;

/// type 1, EIP2930
SWIFT_CLASS("_TtC19ParticleNetworkBase23AccessListEIP2930TxData")
@interface AccessListEIP2930TxData : NSObject
/// All parameters should be hex string
- (nonnull instancetype)initWithGasPrice:(NSString * _Nonnull)gasPrice accessList:(AccessList * _Nullable)accessList nonce:(NSString * _Nonnull)nonce gasLimit:(NSString * _Nonnull)gasLimit from:(NSString * _Nonnull)from to:(NSString * _Nonnull)to value:(NSString * _Nonnull)value data:(NSString * _Nonnull)data chainId:(NSString * _Nonnull)chainId v:(NSString * _Nullable)v r:(NSString * _Nullable)r s:(NSString * _Nullable)s action:(enum Action)action OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)serializeAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)init:(NSString * _Nonnull)hexString error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, Action, closed) {
  ActionNormal = 0,
  ActionSpeedup = 1,
  ActionCancel = 2,
};


SWIFT_CLASS("_TtC19ParticleNetworkBase9Constants")
@interface Constants : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtCC19ParticleNetworkBase9Constants6Regexs")
@interface Regexs : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (NSString * _Nonnull)base58PublicKey SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)base58String SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)evmAddress SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)hexString SWIFT_WARN_UNUSED_RESULT;
@end


/// type 2, EIP1559
SWIFT_CLASS("_TtC19ParticleNetworkBase22FeeMarketEIP1559TxData")
@interface FeeMarketEIP1559TxData : NSObject
/// All parameters should be hex string except action.
- (nonnull instancetype)initWithMaxPriorityFeePerGas:(NSString * _Nonnull)maxPriorityFeePerGas maxFeePerGas:(NSString * _Nonnull)maxFeePerGas nonce:(NSString * _Nonnull)nonce gasLimit:(NSString * _Nonnull)gasLimit from:(NSString * _Nonnull)from to:(NSString * _Nonnull)to value:(NSString * _Nonnull)value data:(NSString * _Nonnull)data chainId:(NSString * _Nonnull)chainId v:(NSString * _Nullable)v r:(NSString * _Nullable)r s:(NSString * _Nullable)s action:(enum Action)action OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)serializeAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)init:(NSString * _Nonnull)hexString error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class ParticleNetworkConfiguration;
@class ChainName;
enum DevEnvironment : NSInteger;

SWIFT_CLASS("_TtC19ParticleNetworkBase15ParticleNetwork")
@interface ParticleNetwork : NSObject
/// Initialize Particle Network
/// \param config particle network configuration
///
+ (void)initializeWithConfig:(ParticleNetworkConfiguration * _Nonnull)config;
/// get chain name
///
/// returns:
/// chain name
+ (ChainName * _Nonnull)getChainName SWIFT_WARN_UNUSED_RESULT;
/// get development environment
///
/// returns:
/// development environment
+ (enum DevEnvironment)getDevEnv SWIFT_WARN_UNUSED_RESULT;
/// set chain name
/// \param chainName chain name
///
+ (void)setChainName:(ChainName * _Nonnull)chainName;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@interface ParticleNetwork (SWIFT_EXTENSION(ParticleNetworkBase))
@end

typedef SWIFT_ENUM(NSInteger, Name, closed) {
  NameSolana = 0,
  NameEthereum = 1,
  NameBsc = 2,
  NamePolygon = 3,
  NameAvalanche = 4,
  NameFantom = 5,
  NameArbitrum = 6,
  NameMoonBeam = 7,
  NameMoonRiver = 8,
  NameHeco = 9,
  NameAurora = 10,
  NameHarmony = 11,
};

enum SolanaNetwork : NSInteger;
enum EthereumNetwork : NSInteger;
enum BscNetwork : NSInteger;
enum PolygonNetwork : NSInteger;
enum AvalancheNetwork : NSInteger;
enum ArbitrumNetwork : NSInteger;
enum FantomNetwork : NSInteger;
enum MoonBeamNetwork : NSInteger;
enum MoonRiverNetwork : NSInteger;
enum HecoNetwork : NSInteger;
enum HarmonyNetwork : NSInteger;
enum AuroraNetwork : NSInteger;

SWIFT_CLASS("_TtCC19ParticleNetworkBase15ParticleNetwork9ChainName")
@interface ChainName : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (ChainName * _Nonnull)solana:(enum SolanaNetwork)network SWIFT_WARN_UNUSED_RESULT;
+ (ChainName * _Nonnull)ethereum:(enum EthereumNetwork)network SWIFT_WARN_UNUSED_RESULT;
+ (ChainName * _Nonnull)bsc:(enum BscNetwork)network SWIFT_WARN_UNUSED_RESULT;
+ (ChainName * _Nonnull)polygon:(enum PolygonNetwork)network SWIFT_WARN_UNUSED_RESULT;
+ (ChainName * _Nonnull)avalanche:(enum AvalancheNetwork)network SWIFT_WARN_UNUSED_RESULT;
+ (ChainName * _Nonnull)arbitrum:(enum ArbitrumNetwork)network SWIFT_WARN_UNUSED_RESULT;
+ (ChainName * _Nonnull)fantom:(enum FantomNetwork)network SWIFT_WARN_UNUSED_RESULT;
+ (ChainName * _Nonnull)moonbeam:(enum MoonBeamNetwork)network SWIFT_WARN_UNUSED_RESULT;
+ (ChainName * _Nonnull)moonRiver:(enum MoonRiverNetwork)network SWIFT_WARN_UNUSED_RESULT;
+ (ChainName * _Nonnull)heco:(enum HecoNetwork)network SWIFT_WARN_UNUSED_RESULT;
+ (ChainName * _Nonnull)harmony:(enum HarmonyNetwork)network SWIFT_WARN_UNUSED_RESULT;
+ (ChainName * _Nonnull)aurora:(enum AuroraNetwork)network SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull path;
@property (nonatomic, readonly) enum Name name;
@property (nonatomic, readonly, copy) NSString * _Nonnull nameString;
@property (nonatomic, readonly) NSInteger chainId;
@property (nonatomic, readonly, copy) NSString * _Nonnull network;
@property (nonatomic, readonly, copy) NSString * _Nonnull nativeSymbol;
@property (nonatomic, readonly, copy) NSString * _Nonnull explorePath;
@property (nonatomic, readonly) BOOL isSupportEIP1559;
@end

typedef SWIFT_ENUM(NSInteger, SolanaNetwork, closed) {
  SolanaNetworkMainnet = 0,
  SolanaNetworkTestnet = 1,
  SolanaNetworkDevnet = 2,
};

typedef SWIFT_ENUM(NSInteger, EthereumNetwork, closed) {
  EthereumNetworkMainnet = 0,
  EthereumNetworkKovan = 1,
};

typedef SWIFT_ENUM(NSInteger, BscNetwork, closed) {
  BscNetworkMainnet = 0,
  BscNetworkTestnet = 1,
};

typedef SWIFT_ENUM(NSInteger, PolygonNetwork, closed) {
  PolygonNetworkMainnet = 0,
  PolygonNetworkTestnet = 1,
};

typedef SWIFT_ENUM(NSInteger, AvalancheNetwork, closed) {
  AvalancheNetworkMainnet = 0,
  AvalancheNetworkTestnet = 1,
};

typedef SWIFT_ENUM(NSInteger, FantomNetwork, closed) {
  FantomNetworkMainnet = 0,
  FantomNetworkTestnet = 1,
};

typedef SWIFT_ENUM(NSInteger, ArbitrumNetwork, closed) {
  ArbitrumNetworkMainnet = 0,
  ArbitrumNetworkTestnet = 1,
};

typedef SWIFT_ENUM(NSInteger, MoonBeamNetwork, closed) {
  MoonBeamNetworkMainnet = 0,
  MoonBeamNetworkTestnet = 1,
};

typedef SWIFT_ENUM(NSInteger, MoonRiverNetwork, closed) {
  MoonRiverNetworkMainnet = 0,
  MoonRiverNetworkTestnet = 1,
};

typedef SWIFT_ENUM(NSInteger, HecoNetwork, closed) {
  HecoNetworkMainnet = 0,
  HecoNetworkTestnet = 1,
};

typedef SWIFT_ENUM(NSInteger, AuroraNetwork, closed) {
  AuroraNetworkMainnet = 0,
  AuroraNetworkTestnet = 1,
};

typedef SWIFT_ENUM(NSInteger, HarmonyNetwork, closed) {
  HarmonyNetworkMainnet = 0,
  HarmonyNetworkTestnet = 1,
};

typedef SWIFT_ENUM(NSInteger, DevEnvironment, closed) {
  DevEnvironmentDebug = 0,
  DevEnvironmentStaging = 1,
  DevEnvironmentProduction = 2,
};


SWIFT_CLASS("_TtC19ParticleNetworkBase28ParticleNetworkConfiguration")
@interface ParticleNetworkConfiguration : NSObject
/// Init method
/// \param chainName chain name
///
/// \param devEnv development environment
///
- (nonnull instancetype)initWithChainName:(ChainName * _Nonnull)chainName devEnv:(enum DevEnvironment)devEnv OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// type 0, legacy
SWIFT_CLASS("_TtC19ParticleNetworkBase6TxData")
@interface TxData : NSObject
/// All parameters should be hex string
- (nonnull instancetype)initWithGasPrice:(NSString * _Nonnull)gasPrice nonce:(NSString * _Nonnull)nonce gasLimit:(NSString * _Nonnull)gasLimit from:(NSString * _Nonnull)from to:(NSString * _Nonnull)to value:(NSString * _Nonnull)value data:(NSString * _Nonnull)data chainId:(NSString * _Nonnull)chainId v:(NSString * _Nullable)v r:(NSString * _Nullable)r s:(NSString * _Nullable)s action:(enum Action)action OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)serializeAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)init:(NSString * _Nonnull)hexString error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif
